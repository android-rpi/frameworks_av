cc_binary {
    name: "mediaswcodec",
    vendor_available: true,
    min_sdk_version: "29",

    srcs: [
        "main_swcodecservice.cpp",
    ],

    shared_libs: [
        "libavservices_minijail",
        "libbase",
        "libhidlbase",
        "liblog",
        "libmedia_codecserviceregistrant",
    ],

    target: {
        android: {
            product_variables: {
                malloc_not_svelte: {
                    // Scudo increases memory footprint, so only enable on
                    // non-svelte devices.
                    shared_libs: ["libc_scudo"],
                },
            },
        },
    },

    header_libs: [
        "libmedia_headers",
    ],

    init_rc: ["mediaswcodec.rc"],

    cflags: [
        "-Werror",
        "-Wall",
        "-Wno-error=deprecated-declarations",
    ],
}

prebuilt_etc {
    name: "mediaswcodec.policy",
    sub_dir: "seccomp_policy",
    arch: {
        arm: {
            src: "seccomp_policy/mediaswcodec-arm.policy",
        },
        arm64: {
            src: "seccomp_policy/mediaswcodec-arm64.policy",
        },
        x86: {
            src: "seccomp_policy/mediaswcodec-x86.policy",
        },
        x86_64: {
            src: "seccomp_policy/mediaswcodec-x86_64.policy",
        },
    },
    required: [
        "crash_dump.policy",
        "code_coverage.policy",
    ],
}

// media.codec -- the one that handles vendor & HW codecs

cc_binary {
    name: "android.hardware.media.omx@1.0-service",
    relative_install_path: "hw",
    vendor: true,

    srcs: [
        "main_codecservice.cpp",
    ],

    shared_libs: [
        "libbinder",
        "libutils",
        "liblog",
        "libbase",
        "libavservices_minijail",
        "libcutils",
        "libhidlbase",
        "libstagefright_omx",
        "libstagefright_xmlparser",
        "android.hardware.media.omx@1.0",
        "android.hidl.memory@1.0",
    ],

    init_rc: ["android.hardware.media.omx@1.0-service.rc"],

    required: [
        "mediacodec.policy",
    ],

    cflags: [
        "-Werror",
        "-Wall",
        "-Wno-error=deprecated-declarations",
    ],
}


prebuilt_etc {
    name: "mediacodec.policy",
    sub_dir: "seccomp_policy",
    arch: {
        arm: {
            src: "seccomp_policy/mediacodec-arm.policy",
        },
        arm64: {
            src: "seccomp_policy/mediacodec-arm64.policy",
        },
        x86: {
            src: "seccomp_policy/mediacodec-x86.policy",
        },
        x86_64: {
            src: "seccomp_policy/mediacodec-x86_64.policy",
        },
    },
    required: [
        "crash_dump.policy",
        "code_coverage.policy",
    ],
}
